-- T033_ASS2_SCRIPT.SQL
-- RONAK SHAH - 4949773
-- MEHRI NIKKHAH - 4978110

--PART 1
--TASK 1.1
--Drop Sequence A2ERROREVENT
DROP SEQUENCE A2ERROREVENT_SEQ;

--Generate Sequence for ERRORID in A2ERROREVENT
CREATE SEQUENCE A2ERROREVENT_SEQ;

--Drop Table A2ERROREVENT
DROP TABLE A2ERROREVENT;

-- Create Table A2ERROREVENT
CREATE TABLE A2ERROREVENT (
ERRORID INTEGER,
SOURCE_ROWID ROWID,
SOURCE_TABLE VARCHAR2(30),
FILTERID INTEGER,
DATETIME DATE,
ACTION VARCHAR2(6),
CONSTRAINT ERROREVENTACTION
CHECK (ACTION IN ('SKIP','MODIFY'))
);

/

--TASK 1.2
--Drop Sequence for DWPRODID
DROP SEQUENCE PRODUCT_SEQ;

--Generate Sequence for DWPRODID
CREATE SEQUENCE PRODUCT_SEQ;

--Drop Table DWPROD
DROP TABLE DWPROD;

--Create Table DWPROD
CREATE TABLE DWPROD(
DWPRODID INTEGER,
DWSOURCETABLE VARCHAR2(10),
DWSOURCEID NUMBER(38),
PRODNAME VARCHAR2(100),
PRODCATNAME VARCHAR2(30),
PRODMANUNAME VARCHAR2(30),
PRODSHIPNAME VARCHAR2(30)
);

/

--Drop Sequence for DWCUSTID
DROP SEQUENCE CUSTOMER_SEQ;

--Generate Sequence for DWCUSTID
CREATE SEQUENCE CUSTOMER_SEQ;

--Drop Table DWCUST
DROP TABLE DWCUST;

--Create Table DWCUST
CREATE TABLE DWCUST(
DWCUSTID INTEGER,
DWSOURCEIDBRIS NUMBER(38),
DWSOURCEIDMELB NUMBER(38),
FIRSTNAME VARCHAR2(30),
SURNAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(20),
POSTCODE NUMBER(4),
CITY VARCHAR2(50),
STATE VARCHAR2(10),
CUSTCATNAME VARCHAR2(30)
);

/

-- Drop Sequence SALE_SEQ
DROP SEQUENCE SALE_SEQ;

--Generate Sequence for DWSALE
CREATE SEQUENCE SALE_SEQ;

--Drop Table DWSALE
DROP TABLE DWSALE;

--Create Table DWSALE

CREATE TABLE DWSALE(
DWSALEID INTEGER, 
DWCUSTID INTEGER,
DWPRODID INTEGER,
DWSOURCEIDBRIS NUMBER(38),
DWSOURCEIDMELB NUMBER(38),
QTY NUMBER(2),
SALE_DWDATEID NUMBER,
SHIP_DWDATEID NUMBER,
SALEPRICE NUMBER (7,2)
);

/

--TASK 1.3
--Drop Table GENDERSPELLING
DROP TABLE GENDERSPELLING;

--Create Table GENDERSPELLING
CREATE TABLE GENDERSPELLING(
Invalid_Value Varchar2(10),
New_Value Char
);

--Populate Table GENDERSPELLING
INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('MAIL','M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('WOMAN','F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('FEM','F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('FEMALE','F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('MALE','M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('GENTLEMAN','M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('MM','M');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('FF','F');

INSERT INTO GENDERSPELLING (Invalid_Value, New_Value)
VALUES ('FEMAIL','F');

/

--PART 2
--TASK 2.1
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'PRODUCT',
1,
SYSDATE,
'SKIP'
FROM A2PRODUCT 
WHERE PRODNAME IS NULL;

/

--TASK 2.2
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2PRODUCT',
2,
SYSDATE,
'MODIFY'
FROM A2PRODUCT 
WHERE MANUFACTURERCODE IS NULL;

/

--TASK 2.3
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2PRODUCT',
3,
SYSDATE,
'MODIFY'
FROM A2PRODUCT 
WHERE PRODCATEGORY NOT IN (SELECT PRODUCTCATEGORY
     FROM A2PRODCATEGORY)OR PRODCATEGORY IS NULL;

/

--TASK 2.4.3
INSERT INTO DWPROD(
DWPRODID,
DWSOURCETABLE,
DWSOURCEID,
PRODNAME,
PRODCATNAME,
PRODMANUNAME,
PRODSHIPNAME 
)
SELECT 
PRODUCT_SEQ.NEXTVAL,
'A2PRODUCT',
P.PRODID, 
P.PRODNAME,
(SELECT PC.CATEGORYNAME FROM A2PRODCATEGORY PC WHERE P.PRODCATEGORY = PC.PRODUCTCATEGORY),
(SELECT M.MANUNAME FROM A2MANUFACTURER M WHERE P.MANUFACTURERCODE = M.MANUCODE),
(SELECT S.DESCRIPTION FROM A2SHIPPING S WHERE P.SHIPPINGCODE = S.SHIPPINGCODE)
FROM A2PRODUCT P
WHERE P.ROWID NOT IN (SELECT SOURCE_ROWID FROM A2ERROREVENT);

/

--TASK 2.4.4
INSERT INTO DWPROD(
DWPRODID,
DWSOURCETABLE,
DWSOURCEID,
PRODNAME,
PRODCATNAME,
PRODMANUNAME,
PRODSHIPNAME 
)
SELECT 
PRODUCT_SEQ.NEXTVAL,
'A2PRODUCT',
P.PRODID, 
P.PRODNAME,
(SELECT PC.CATEGORYNAME FROM A2PRODCATEGORY PC WHERE P.PRODCATEGORY = PC.PRODUCTCATEGORY),
'UNKNOWN',
(SELECT S.DESCRIPTION FROM A2SHIPPING S WHERE P.SHIPPINGCODE = S.SHIPPINGCODE)
FROM A2PRODUCT P
WHERE P.ROWID IN (SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE (FILTERID = 2 AND ACTION = 'MODIFY'));

/

--TASK 2.4.5
INSERT INTO DWPROD(
DWPRODID,
DWSOURCETABLE,
DWSOURCEID,
PRODNAME,
PRODCATNAME,
PRODMANUNAME,
PRODSHIPNAME 
)
SELECT 
PRODUCT_SEQ.NEXTVAL,
'A2PRODUCT',
P.PRODID, 
P.PRODNAME,
'UNKNOWN',
(SELECT M.MANUNAME FROM A2MANUFACTURER M WHERE P.MANUFACTURERCODE = M.MANUCODE),
(SELECT S.DESCRIPTION FROM A2SHIPPING S WHERE P.SHIPPINGCODE = S.SHIPPINGCODE)
FROM A2PRODUCT P
WHERE P.ROWID IN (SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE (FILTERID = 3 AND ACTION = 'MODIFY'));

/

--PART 3
--TASK 3.1
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2CUSTBRIS',
4,
SYSDATE,
'MODIFY'
FROM A2CUSTBRIS 
WHERE CUSTCATCODE NOT IN (SELECT CUSTCATCODE 
                          FROM A2CUSTCATEGORY)
                          OR CUSTCATCODE IS NULL;

/

--TASK 3.2
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2CUSTBRIS',
5,
SYSDATE,
'MODIFY'
FROM A2CUSTBRIS 
WHERE PHONE LIKE '% %' OR PHONE LIKE '%-%';

/

--TASK 3.3
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2CUSTBRIS',
6,
SYSDATE,
'SKIP'
FROM A2CUSTBRIS 
WHERE (LENGTH(PHONE) != 10) AND (NOT(PHONE LIKE '% %' OR PHONE LIKE '%-%'));

/

--TASK 3.4
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2CUSTBRIS',
7,
SYSDATE,
'MODIFY'
FROM A2CUSTBRIS 
WHERE NOT(UPPER(GENDER) = 'M' OR UPPER(GENDER) = 'F') OR GENDER IS NULL;

/

--TASK 3.5.1
INSERT INTO DWCUST(
DWCUSTID,
DWSOURCEIDBRIS,
FIRSTNAME,
SURNAME,
GENDER,
PHONE,
POSTCODE,
CITY,
STATE,
CUSTCATNAME
)
SELECT
CUSTOMER_SEQ.NEXTVAL,
C.CUSTID,
C.FNAME,
C.SNAME,
UPPER(C.GENDER),
C.PHONE,
C.POSTCODE,
C.CITY,
C.STATE,
CC.CUSTCATNAME
FROM A2CUSTBRIS C
NATURAL JOIN A2CUSTCATEGORY CC
WHERE C.ROWID NOT IN (SELECT SOURCE_ROWID FROM A2ERROREVENT);

/

--TASK 3.5.2
INSERT INTO DWCUST(
DWCUSTID,
DWSOURCEIDBRIS,
FIRSTNAME,
SURNAME,
GENDER,
PHONE,
POSTCODE,
CITY,
STATE,
CUSTCATNAME
)
SELECT
CUSTOMER_SEQ.NEXTVAL,
CUSTID,
FNAME,
SNAME,
UPPER(GENDER),
PHONE,
POSTCODE,
CITY,
STATE,
'UNKNOWN'
FROM A2CUSTBRIS 
WHERE ROWID IN (SELECT SOURCE_ROWID 
FROM A2ERROREVENT 
WHERE FILTERID = 4 AND ACTION = 'MODIFY');

/

--TASK 3.5.3
INSERT INTO DWCUST(
DWCUSTID,
DWSOURCEIDBRIS,
FIRSTNAME,
SURNAME,
GENDER,
PHONE,
POSTCODE,
CITY,
STATE,
CUSTCATNAME
)
SELECT
CUSTOMER_SEQ.NEXTVAL,
C.CUSTID,
C.FNAME,
C.SNAME,
UPPER(C.GENDER),
REPLACE(REPLACE(C.PHONE, ' ', ''),'-',''),
C.POSTCODE,
C.CITY,
C.STATE,
CC.CUSTCATNAME
FROM A2CUSTBRIS C
NATURAL JOIN A2CUSTCATEGORY CC
WHERE C.ROWID IN (SELECT SOURCE_ROWID 
FROM A2ERROREVENT 
WHERE FILTERID = 5 AND ACTION = 'MODIFY');

/

--TASK 3.5.4
INSERT INTO DWCUST(
DWCUSTID,
DWSOURCEIDBRIS,
FIRSTNAME,
SURNAME,
GENDER,
PHONE,
POSTCODE,
CITY,
STATE,
CUSTCATNAME
)
SELECT
CUSTOMER_SEQ.NEXTVAL,
C.CUSTID,
C.FNAME,
C.SNAME,
(SELECT S.NEW_VALUE FROM GENDERSPELLING S WHERE UPPER(C.GENDER) = S.INVALID_VALUE),
C.PHONE,
C.POSTCODE,
C.CITY,
C.STATE,
CC.CUSTCATNAME
FROM A2CUSTBRIS C
NATURAL JOIN A2CUSTCATEGORY CC
WHERE C.ROWID IN (SELECT SOURCE_ROWID 
FROM A2ERROREVENT 
WHERE FILTERID = 7 AND ACTION = 'MODIFY')AND 
UPPER(C.GENDER) IN (SELECT INVALID_VALUE FROM GENDERSPELLING);


INSERT INTO DWCUST(
DWCUSTID,
DWSOURCEIDBRIS,
FIRSTNAME,
SURNAME,
GENDER,
PHONE,
POSTCODE,
CITY,
STATE,
CUSTCATNAME
)
SELECT
CUSTOMER_SEQ.NEXTVAL,
C.CUSTID,
C.FNAME,
C.SNAME,
'U',
C.PHONE,
C.POSTCODE,
C.CITY,
C.STATE,
CC.CUSTCATNAME
FROM A2CUSTBRIS C
NATURAL JOIN A2CUSTCATEGORY CC
WHERE (C.ROWID IN (SELECT SOURCE_ROWID 
FROM A2ERROREVENT 
WHERE FILTERID = 7 AND ACTION = 'MODIFY')AND 
UPPER(C.GENDER) NOT IN (SELECT INVALID_VALUE FROM GENDERSPELLING)) OR C.GENDER IS NULL;

/

--PART 4
--TASK 4.1
INSERT INTO DWCUST(
DWCUSTID,
DWSOURCEIDMELB,
FIRSTNAME,
SURNAME,
GENDER,
PHONE,
POSTCODE,
CITY,
STATE,
CUSTCATNAME
)
SELECT
CUSTOMER_SEQ.NEXTVAL,
C.CUSTID,
C.FNAME,
C.SNAME,
C.GENDER,
C.PHONE,
C.POSTCODE,
C.CITY,
C.STATE,
CC.CUSTCATNAME
FROM A2CUSTMELB C
NATURAL JOIN A2CUSTCATEGORY CC
WHERE NOT
(FNAME IN(SELECT FNAME FROM A2CUSTBRIS) AND 
SNAME IN(SELECT SNAME FROM A2CUSTBRIS) AND 
POSTCODE IN(SELECT POSTCODE FROM A2CUSTBRIS));

MERGE INTO DWCUST DC
USING A2CUSTMELB CM
ON (DC.FIRSTNAME = CM.FNAME AND DC.SURNAME = CM.SNAME AND DC.POSTCODE = CM.POSTCODE)
WHEN MATCHED THEN UPDATE SET DC.DWSOURCEIDMELB = CM.CUSTID;

/

--TASK 5.1
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEBRIS',
8,
SYSDATE,
'SKIP'
FROM A2SALEBRIS 
WHERE PRODID NOT IN (SELECT DWSOURCEID FROM DWPROD) OR PRODID IS NULL;

/

--TASK 5.2
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEBRIS',
9,
SYSDATE,
'SKIP'
FROM A2SALEBRIS 
WHERE CUSTID NOT IN (SELECT CUSTID FROM A2SALEBRIS 
WHERE CUSTID IN(SELECT DWSOURCEIDBRIS FROM DWCUST));

/

--TASK 5.3
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEBRIS',
10,
SYSDATE,
'MODIFY'
FROM A2SALEBRIS 
WHERE (SHIPDATE < SALEDATE) OR (SHIPDATE IS NULL) OR (SALEDATE IS NULL);

/

--TASK 5.4
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEBRIS',
11,
SYSDATE,
'MODIFY'
FROM A2SALEBRIS 
WHERE UNITPRICE IS NULL;

/

--TASK 5.5
INSERT INTO DWSALE(
DWSALEID, 
DWCUSTID,
DWPRODID,
DWSOURCEIDBRIS,
QTY,
SALE_DWDATEID,
SHIP_DWDATEID,
SALEPRICE
)
SELECT
SALE_SEQ.NEXTVAL,
DC.DWCUSTID,
DP.DWPRODID,
SB.SALEID,
SB.QTY,
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SB.SALEDATE),
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SB.SHIPDATE),
SB.UNITPRICE
FROM 
A2SALEBRIS SB,
DWCUST DC,
DWPROD DP
WHERE
SB.CUSTID = DC.DWSOURCEIDBRIS AND 
SB.PRODID = DP.DWSOURCEID AND 
SB.ROWID NOT IN (SELECT SOURCE_ROWID FROM A2ERROREVENT);

/

--TASK 5.6
INSERT INTO DWSALE(
DWSALEID, 
DWCUSTID,
DWPRODID,
DWSOURCEIDBRIS,
QTY,
SALE_DWDATEID,
SHIP_DWDATEID,
SALEPRICE
)
SELECT
SALE_SEQ.NEXTVAL,
DC.DWCUSTID,
DP.DWPRODID,
SB.SALEID,
SB.QTY,
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SB.SALEDATE),
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = (SB.SALEDATE+2)),
SB.UNITPRICE
FROM 
A2SALEBRIS SB,
DWCUST DC,
DWPROD DP
WHERE
SB.CUSTID = DC.DWSOURCEIDBRIS AND 
SB.PRODID = DP.DWSOURCEID AND 
SB.ROWID IN (SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 10 AND ACTION = 'MODIFY');

/

--TASK 5.7
INSERT INTO DWSALE(
DWSALEID, 
DWCUSTID,
DWPRODID,
DWSOURCEIDBRIS,
QTY,
SALE_DWDATEID,
SHIP_DWDATEID,
SALEPRICE
)
SELECT
SALE_SEQ.NEXTVAL,
DC.DWCUSTID,
DP.DWPRODID,
SB.SALEID,
SB.QTY,
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SB.SALEDATE),
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SB.SHIPDATE),
(SELECT MAX(UNITPRICE) FROM A2SALEBRIS WHERE PRODID = SB.PRODID GROUP BY PRODID)
FROM 
A2SALEBRIS SB,
DWCUST DC,
DWPROD DP
WHERE
SB.CUSTID = DC.DWSOURCEIDBRIS AND 
SB.PRODID = DP.DWSOURCEID AND 
SB.ROWID IN (SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 11 AND ACTION = 'MODIFY');

/

--PART 6
--TASK 6.1
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEMELB',
12,
SYSDATE,
'SKIP'
FROM A2SALEMELB 
WHERE PRODID NOT IN (SELECT DWSOURCEID FROM DWPROD) OR PRODID IS NULL;

/

--TASK 6.2
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEMELB',
13,
SYSDATE,
'SKIP'
FROM A2SALEMELB SM
WHERE CUSTID NOT IN 
(SELECT DWSOURCEIDMELB 
FROM DWCUST DC 
WHERE DC.DWSOURCEIDMELB=SM.CUSTID ) OR 
CUSTID IS NULL;

/

--TASK 6.3
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEBRIS',
14,
SYSDATE,
'MODIFY'
FROM A2SALEMELB 
WHERE (SHIPDATE < SALEDATE) OR (SHIPDATE IS NULL) OR (SALEDATE IS NULL);

/

--TASK 6.4
INSERT INTO A2ERROREVENT(
ERRORID,
SOURCE_ROWID,
SOURCE_TABLE,
FILTERID,
DATETIME,
ACTION
)
SELECT
A2ERROREVENT_SEQ.NEXTVAL,
ROWID,
'A2SALEBRIS',
15,
SYSDATE,
'MODIFY'
FROM A2SALEMELB 
WHERE UNITPRICE IS NULL;

/

--TASK 6.5
INSERT INTO DWSALE(
DWSALEID, 
DWCUSTID,
DWPRODID,
DWSOURCEIDMELB,
QTY,
SALE_DWDATEID,
SHIP_DWDATEID,
SALEPRICE
)
SELECT
SALE_SEQ.NEXTVAL,
DC.DWCUSTID,
DP.DWPRODID,
SM.SALEID,
SM.QTY,
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SM.SALEDATE),
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SM.SHIPDATE),
SM.UNITPRICE
FROM 
A2SALEMELB SM,
DWCUST DC,
DWPROD DP
WHERE
SM.CUSTID = DC.DWSOURCEIDMELB AND 
SM.PRODID = DP.DWSOURCEID AND 
SM.ROWID NOT IN (SELECT SOURCE_ROWID FROM A2ERROREVENT);

/

--TASK 6.6
INSERT INTO DWSALE(
DWSALEID, 
DWCUSTID,
DWPRODID,
DWSOURCEIDMELB,
QTY,
SALE_DWDATEID,
SHIP_DWDATEID,
SALEPRICE
)
SELECT
SALE_SEQ.NEXTVAL,
DC.DWCUSTID,
DP.DWPRODID,
SM.SALEID,
SM.QTY,
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SM.SALEDATE),
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = (SM.SALEDATE+2)),
SM.UNITPRICE
FROM 
A2SALEMELB SM,
DWCUST DC,
DWPROD DP
WHERE
SM.CUSTID = DC.DWSOURCEIDMELB AND 
SM.PRODID = DP.DWSOURCEID AND 
SM.ROWID IN (SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 14 AND ACTION = 'MODIFY' ) AND SM.ROWID NOT IN(SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID IN (15));

/

--TASK 6.7
INSERT INTO DWSALE(
DWSALEID, 
DWCUSTID,
DWPRODID,
DWSOURCEIDMELB,
QTY,
SALE_DWDATEID,
SHIP_DWDATEID,
SALEPRICE
)
SELECT
SALE_SEQ.NEXTVAL,
DC.DWCUSTID,
DP.DWPRODID,
SM.SALEID,
SM.QTY,
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SM.SALEDATE),
(SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SM.SHIPDATE),
(SELECT MAX(UNITPRICE) FROM A2SALEMELB WHERE PRODID = SM.PRODID GROUP BY PRODID)
FROM 
A2SALEMELB SM,
DWCUST DC,
DWPROD DP
WHERE
SM.CUSTID = DC.DWSOURCEIDMELB AND 
SM.PRODID = DP.DWSOURCEID AND 
SM.ROWID IN (SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID = 15 AND ACTION = 'MODIFY') AND SM.ROWID NOT IN(SELECT SOURCE_ROWID FROM A2ERROREVENT WHERE FILTERID IN (14));

/

--PART 7
--TASK 7.1
--IT'S BEING DONE IN PART 6, TASK 6.6 AND TASK 6.7 ITSELF.
